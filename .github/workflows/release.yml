name: Build and Release

on:
  push:
    branches:
      - main
      - master
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
      - id: version
        run: |
          VERSION=$(awk -F\" '/^version:/ {print $2}' RandomDrop/src/main/resources/plugin.yml)
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
      - id: commit
        run: echo "short=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
      - id: tag
        run: |
          VERSION=${{ steps.version.outputs.version }}
          COMMIT=${{ steps.commit.outputs.short }}
          if [ "${{ github.ref }}" = "refs/heads/dev" ]; then
            echo "tag=${VERSION}-${COMMIT}" >> "$GITHUB_OUTPUT"
          else
            echo "tag=${VERSION}" >> "$GITHUB_OUTPUT"
          fi
      - name: Delete existing release
        if: github.ref != 'refs/heads/dev'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=${{ steps.version.outputs.version }}
          TAG=${{ steps.tag.outputs.tag }}
          if state=$(gh release view "$TAG" --json draft -q .draft 2>/dev/null); then
            if [ "$state" = "false" ]; then
              gh release delete "$TAG" -y
              gh api -X DELETE "repos/${{ github.repository }}/git/refs/tags/$TAG"
            fi
          fi
          gh api -X GET "repos/${{ github.repository }}/releases" --paginate -q ".[] | select(.draft == true and .tag_name | startswith(\"${VERSION}-\")) | .tag_name" | while read DRAFT_TAG; do
            gh release delete "$DRAFT_TAG" -y
            gh api -X DELETE "repos/${{ github.repository }}/git/refs/tags/$DRAFT_TAG"
          done
      - name: Build
        run: mvn -B -f RandomDrop/pom.xml package
      - id: prepare
        run: |
          VERSION=${{ steps.version.outputs.version }}
          COMMIT=${{ steps.commit.outputs.short }}
          if [ "${{ github.ref }}" = "refs/heads/dev" ]; then
            NAME="RandomDrop-${VERSION}-${COMMIT}.jar"
          else
            NAME="RandomDrop-${VERSION}.jar"
          fi
          mv RandomDrop/target/osef.jar "$NAME"
          echo "file=$NAME" >> "$GITHUB_OUTPUT"
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: ${{ github.ref == 'refs/heads/dev' && format('RandomDrop {0}-dev {1}', steps.version.outputs.version, steps.commit.outputs.short) || format('RandomDrop {0}', steps.version.outputs.version) }}
          files: ${{ steps.prepare.outputs.file }}
          draft: ${{ github.ref == 'refs/heads/dev' }}
          prerelease: false
          generate_release_notes: ${{ github.ref != 'refs/heads/dev' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
